/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NFTMarket, NFTMarketInterface } from "../NFTMarket";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    name: "MarketItemCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createMarketItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "createMarketSale",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchItemsCreated",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMyNFTs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "showAll",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526658d15e1762800060045534801561001b57600080fd5b50600160008190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611dd6806100746000396000f3fe6080604052600436106100705760003560e01c806358eb2df51161004e57806358eb2df5146100f65780637f4bf3d914610112578063c23b139e1461013d578063f064c32e1461015957610070565b80630f08efe01461007557806312e85585146100a0578063202e3740146100cb575b600080fd5b34801561008157600080fd5b5061008a610184565b60405161009791906119a0565b60405180910390f35b3480156100ac57600080fd5b506100b561049a565b6040516100c29190611a72565b60405180910390f35b3480156100d757600080fd5b506100e06104a4565b6040516100ed91906119a0565b60405180910390f35b610110600480360381019061010b91906116a3565b61083e565b005b34801561011e57600080fd5b50610127610ba2565b60405161013491906119a0565b60405180910390f35b61015760048036038101906101529190611667565b610e80565b005b34801561016557600080fd5b5061016e611139565b60405161017b91906119a0565b60405180910390f35b6060600061019260016114d3565b905060006101a060026114d3565b6101aa60016114d3565b6101b49190611b38565b90506000808267ffffffffffffffff8111156101f9577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561023257816020015b61021f6115bc565b8152602001906001900390816102175790505b50905060005b8481101561048f57600073ffffffffffffffffffffffffffffffffffffffff16600560006001846102699190611ae2565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561047c5760006001826102c69190611ae2565b90506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff16151515158152505084868151811061045f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052506001856104779190611ae2565b945050505b808061048790611bf9565b915050610238565b508094505050505090565b6000600454905090565b606060006104b260016114d3565b905060008060005b8381101561055b573373ffffffffffffffffffffffffffffffffffffffff16600560006001846104ea9190611ae2565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610548576001836105459190611ae2565b92505b808061055390611bf9565b9150506104ba565b5060008267ffffffffffffffff81111561059e577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156105d757816020015b6105c46115bc565b8152602001906001900390816105bc5790505b50905060005b84811015610833573373ffffffffffffffffffffffffffffffffffffffff166005600060018461060d9190611ae2565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561082057600060018261066a9190611ae2565b90506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff161515151581525050848681518110610803577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060018561081b9190611ae2565b945050505b808061082b90611bf9565b9150506105dd565b508094505050505090565b60026000541415610884576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087b90611a52565b60405180910390fd5b6002600081905550600081116108cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c690611a12565b60405180910390fd5b6004543414610913576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090a906119f2565b60405180910390fd5b61091d60016114e1565b600061092960016114d3565b90506040518060e001604052808281526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200183815260200160001515815250600560008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060160006101000a81548160ff0219169083151502179055509050508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610b0a93929190611924565b600060405180830381600087803b158015610b2457600080fd5b505af1158015610b38573d6000803e3d6000fd5b50505050828473ffffffffffffffffffffffffffffffffffffffff16827f045dfa01dcba2b36aba1d3dc4a874f4b0c5d2fbeb8d2c4b34a7d88c8d8f929d1336000876000604051610b8c949392919061195b565b60405180910390a4506001600081905550505050565b60606000610bb060016114d3565b90506000610bbe60026114d3565b610bc860016114d3565b610bd29190611b38565b90506000610c156040518060400160405280600581526020017f6974656d73000000000000000000000000000000000000000000000000000000815250836114f7565b60008267ffffffffffffffff811115610c57577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610c9057816020015b610c7d6115bc565b815260200190600190039081610c755790505b50905060005b84811015610e75576000600182610cad9190611ae2565b90506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff161515151581525050848681518110610e46577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600185610e5e9190611ae2565b945050508080610e6d90611bf9565b915050610c96565b508094505050505090565b60026000541415610ec6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebd90611a52565b60405180910390fd5b6002600081905550600060056000838152602001908152602001600020600501549050600060056000848152602001908152602001600020600201549050813414610f46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3d90611a32565b60405180910390fd5b6005600084815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610fc2573d6000803e3d6000fd5b508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b815260040161100093929190611924565b600060405180830381600087803b15801561101a57600080fd5b505af115801561102e573d6000803e3d6000fd5b50505050336005600085815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016005600085815260200190815260200160002060060160006101000a81548160ff0219169083151502179055506110c060026114e1565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f1935050505015801561112a573d6000803e3d6000fd5b50505060016000819055505050565b6060600061114760016114d3565b905060008060005b838110156111f0573373ffffffffffffffffffffffffffffffffffffffff166005600060018461117f9190611ae2565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156111dd576001836111da9190611ae2565b92505b80806111e890611bf9565b91505061114f565b5060008267ffffffffffffffff811115611233577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561126c57816020015b6112596115bc565b8152602001906001900390816112515790505b50905060005b848110156114c8573373ffffffffffffffffffffffffffffffffffffffff16600560006001846112a29190611ae2565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156114b55760006001826112ff9190611ae2565b90506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff161515151581525050848681518110611498577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052506001856114b09190611ae2565b945050505b80806114c090611bf9565b915050611272565b508094505050505090565b600081600001549050919050565b6001816000016000828254019250508190555050565b61158f828260405160240161150d9291906119c2565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611593565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000151581525090565b60008135905061164c81611d72565b92915050565b60008135905061166181611d89565b92915050565b6000806040838503121561167a57600080fd5b60006116888582860161163d565b925050602061169985828601611652565b9150509250929050565b6000806000606084860312156116b857600080fd5b60006116c68682870161163d565b93505060206116d786828701611652565b92505060406116e886828701611652565b9150509250925092565b60006116fe8383611878565b60e08301905092915050565b61171381611b7e565b82525050565b61172281611b6c565b82525050565b61173181611b6c565b82525050565b600061174282611a9d565b61174c8185611ac0565b935061175783611a8d565b8060005b8381101561178857815161176f88826116f2565b975061177a83611ab3565b92505060018101905061175b565b5085935050505092915050565b61179e81611b90565b82525050565b6117ad81611b90565b82525050565b60006117be82611aa8565b6117c88185611ad1565b93506117d8818560208601611bc6565b6117e181611c71565b840191505092915050565b60006117f9602583611ad1565b915061180482611c82565b604082019050919050565b600061181c601b83611ad1565b915061182782611cd1565b602082019050919050565b600061183f604083611ad1565b915061184a82611cfa565b604082019050919050565b6000611862601f83611ad1565b915061186d82611d49565b602082019050919050565b60e08201600082015161188e6000850182611906565b5060208201516118a16020850182611719565b5060408201516118b46040850182611906565b5060608201516118c7606085018261170a565b5060808201516118da608085018261170a565b5060a08201516118ed60a0850182611906565b5060c082015161190060c0850182611795565b50505050565b61190f81611bbc565b82525050565b61191e81611bbc565b82525050565b60006060820190506119396000830186611728565b6119466020830185611728565b6119536040830184611915565b949350505050565b60006080820190506119706000830187611728565b61197d6020830186611728565b61198a6040830185611915565b61199760608301846117a4565b95945050505050565b600060208201905081810360008301526119ba8184611737565b905092915050565b600060408201905081810360008301526119dc81856117b3565b90506119eb6020830184611915565b9392505050565b60006020820190508181036000830152611a0b816117ec565b9050919050565b60006020820190508181036000830152611a2b8161180f565b9050919050565b60006020820190508181036000830152611a4b81611832565b9050919050565b60006020820190508181036000830152611a6b81611855565b9050919050565b6000602082019050611a876000830184611915565b92915050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611aed82611bbc565b9150611af883611bbc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611b2d57611b2c611c42565b5b828201905092915050565b6000611b4382611bbc565b9150611b4e83611bbc565b925082821015611b6157611b60611c42565b5b828203905092915050565b6000611b7782611b9c565b9050919050565b6000611b8982611b9c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015611be4578082015181840152602081019050611bc9565b83811115611bf3576000848401525b50505050565b6000611c0482611bbc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611c3757611c36611c42565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f5072696365206d75737420626520657175616c20746f206c697374696e67207060008201527f7269636521000000000000000000000000000000000000000000000000000000602082015250565b7f5072696365206d7573742062652061746c656173742031207765690000000000600082015250565b7f506c65617365207375626d6974207468652061736b696e67207072696365206960008201527f6e206f7264657220746f20636f6d706c65746520746865207075726368617365602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b611d7b81611b6c565b8114611d8657600080fd5b50565b611d9281611bbc565b8114611d9d57600080fd5b5056fea264697066735822122058b062d7c22eaf3085c179d7b38fde790150c2798c9129212b98aad53aa8ae2b64736f6c63430008040033";

export class NFTMarket__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTMarket> {
    return super.deploy(overrides || {}) as Promise<NFTMarket>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTMarket {
    return super.attach(address) as NFTMarket;
  }
  connect(signer: Signer): NFTMarket__factory {
    return super.connect(signer) as NFTMarket__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketInterface {
    return new utils.Interface(_abi) as NFTMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarket {
    return new Contract(address, _abi, signerOrProvider) as NFTMarket;
  }
}
